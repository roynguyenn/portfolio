html {
  color-scheme: light dark;
  
  /* (optional) use the system canvas colors for BG and text */
  background: canvas;
  color: canvastext;
}
body {
    /* Set line height to 1.5 times the font size
         and use the OS’s UI font as the website font
       */
    font: 100%/1.5 system-ui;
    max-width: 100ch;
    margin-inline: max(1em, (100% - 100ch) / 2);
  }
img {
    width: 300px;
    height: auto; /* changed img scaling to not block the entire website*/
 }
:root {
  --color-accent: oklch(65% 50% 0);
}

nav ul,
nav li {
  display: contents;
}

nav {
  display: flex;
  margin-bottom: 1em;
  --border-color: oklch(50% 10% 200 / 40%);
  border-bottom: 1px solid var(--border-color);
}

nav a {
  flex: 1;
  text-align: center;
  padding: 0.5em;
  text-decoration: none;
  color: inherit;
}

nav a.current {
  border-bottom: 0.4em solid oklch(80% 3% 200);
  padding-bottom: calc(0.5em - 0.4em);
}

nav a:hover {
  border-bottom: 0.4em solid var(--color-accent);
  background-color: color-mix(in oklch, var(--color-accent), canvas 85%);
}

form input,
form textarea,
form button,
form label {
  font: inherit;
}

/* Turn the form into a grid container */
form {
  display: grid;
  grid-template-columns: auto 1fr; /* Two columns: auto fits the label, 1fr for the control */
  gap: 1em; /* Spacing between rows and columns */
  align-items: center; /* Align grid items vertically */
}

/* Flatten labels so their content is placed directly into the grid */
form label {
  display: contents;
}

/* Make inputs and textareas take full width available in their grid cell */
form input,
form textarea {
  width: 100%;
  box-sizing: border-box;
}

/* Have the submit button span both columns for a centered, full-width look */
form button {
  grid-column: 1 / -1;
}

/* Responsive grid for projects */
.projects {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
  gap: 1em;
}

/* Each article as a grid with subgrid for row alignment */
.projects article {
  display: grid;
  grid-template-rows: subgrid;
  grid-row: span 3;
  gap: 0.5em;
}

.projects article h2 {
  margin: 0;
}

/* Finishing touches on headings */
h1 {
  font-size: 400%;
}

h1, h2, h3, h4, h5, h6 {
  line-height: 1.1;
  text-wrap: balance;
}

.resume-page .resume-container {
  max-width: 60ch;
  margin: 0 auto;
  padding: 2em 1em;
  background-color: #fff;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.resume-page header h1 {
  text-align: center;
  font-size: 2.5rem;
  margin: 1em 0;
}

.resume-page section > h2 {
  font-size: 2rem;
  margin-bottom: 0.5em;
  padding-bottom: 0.25em;
  border-bottom: 1px solid #e0e0e0;
}
.color-scheme {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 0.8em;      /* make it a bit smaller */
  font-family: inherit;  /* match the rest of your site */
  color: inherit;        /* ensure it follows your canvastext color */
}

/* make sure the dropdown itself inherits the same font */
.color-scheme select {
  font: inherit;
}
/* ensure the wrapper spans its own grid row and stacks its children */
.project-info {
  display: flex;
  flex-direction: column;
  gap: 0.25em;        /* small space between description & year */
  margin-top: 0.5em;  /* space above this block */
}

/* optional fine-tuning */
.project-description {
  margin: 0;
}
.project-year {
  margin: 0;
  color: #666;
  font-size: 0.9rem;
  font-family: Baskerville, serif;
  font-variant-numeric: oldstyle-nums;
}

/* assuming your container has id="projects" */
#projects {
  display: grid;
  /* e.g. two columns, auto-fill style—adjust to your desired layout */
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;     /* ← space between both rows and columns */
  margin: 2rem 0;  /* optional spacing above/below the whole grid */
}

/* style each card */
#projects article {
  background: white;
  padding: 1rem;
  border-radius: 0.5rem;
  /* optional drop-shadow or border if you like */
}

/* 1) Use the same selector your HTML actually has */
.projects {
  display: grid;
  /* auto‐fill as many 15em cards per row as will fit */
  grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
  gap: 1.5rem;       /* space between cards, both rows & cols */
  margin: 2rem 0;    /* optional breathing room above/below */
}

/* 2) Simplify each card: no forced row‐span or subgrid */
.projects article {
  background: white;
  padding: 1rem;
  border-radius: 0.5rem;
  /* no grid-row or subgrid needed—let gap handle everything */
  display: flex;
  flex-direction: column;
  gap: 0.75em;       /* space between elements inside the card */
}
/* 1) Your projects container is already a grid—make sure items stretch */
.projects {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
  gap: 1.5rem;
  align-items: stretch;    /* <-- this makes every <article> fill its row height */
}

/* 2) Each card becomes a column-flex box so we can space things vertically */
.projects article {
  display: flex;
  flex-direction: column;
  justify-content: space-between;  /* <-- pushes footer (year) to the bottom */
  background: white;
  padding: 1rem;
  border-radius: 0.5rem;
}

/* 3) Force every image into the same aspect-box */
.projects article img {
  width: 100%;
  height: 10rem;          /* pick a height that works for you */
  object-fit: cover;      /* crop/scale to fill the box */
  border-radius: 0.25rem; /* optional, match your card style */
  flex-shrink: 0;         /* don’t let flexbox squash the image */
  margin-bottom: 0.5rem;
}

/* 4) Make sure your text container grows to push footer down */
.project-info {
  display: flex;
  flex-direction: column;
  gap: 0.25em;
  flex-grow: 1;           /* <-- this makes the description block fill the space between image and year */
}

/* 5) Tidy up margins on the paragraphs */
.project-description,
.project-year {
  margin: 0;
}

/* 1) Wrap your <img> in a fixed-ratio box */
.projects article {
  /* …existing flex setup… */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.projects article .img-wrapper {
  width: 100%;
  aspect-ratio: 16 / 9;    /* pick your desired ratio */
  overflow: hidden;
  border-radius: 0.25rem;  /* optional, for rounded corners */
  flex-shrink: 0;
  margin-bottom: 0.5rem;
}

/* 2) Make the image fill that box without distortion */
.projects article .img-wrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;       /* crops to fill, no stretching */
  display: block;
}

/* container for all stats */
#profile-stats {
  margin: 2rem 0;
  /* optional: give it a background/card feel */
  background: canvas;
  padding: 1rem;
  border-radius: 0.5rem;
}

/* make dt/dd line up in two columns */
#profile-stats dl {
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 0.5rem 1.5rem;      /* row-gap col-gap */
  align-items: center;
}

/* labels (dt) styling */
#profile-stats dt {
  font-weight: 600;
  color: #444;             /* dark gray */
  text-transform: uppercase;
  font-size: 0.8rem;
  margin: 0;
}

/* values (dd) styling */
#profile-stats dd {
  margin: 0;
  font-size: 1.25rem;
  color: #000;
}

/* if you’d like each stat in its own “card” */
#profile-stats dl > * {
  padding: 0.25rem 0;
}

#projects-pie-plot {
  max-width: 20em;
  margin-block: 2em;

  overflow: visible;
}
/* 1) Legend container: auto-fill grid of items */
.legend {
  display: flex;           /* lay items out in a row */
  flex-wrap: nowrap;       /* prevent wrapping onto a new line */
  justify-content: space-between; /* spread them evenly across the row */
  align-items: center;     /* vertically center swatch + text */
  padding: 0;
  margin: 2em 0;
  list-style: none;
  gap: 1em;               /* small space between swatch and text */
}


/* 2) Each legend item: flex row, centered vertically */
.legend li {
  flex: 1;                 /* each item takes up equal share of the width */
  text-align: center;      /* center‐align the label under the swatch */
  display: flex;           /* allow swatch + label to align nicely */
  flex-direction: column;  /* stack swatch above text */
  align-items: center;
  gap: 1em;
}

/* 3) The swatch itself: square, colored by --color, slightly rounded */
.legend .swatch {
  display: inline-block;           /* allow width/height */
  width: 0.5em;
  aspect-ratio: 1 / 1;             /* make it a perfect square */
  background: var(--color);        /* pulled in by your D3 code */
  border-radius: 0.2em;           /* slight rounding; use 50% for circle */
}

.container {
  display: flex;
  flex: 1;
  align-items: flex-start; /* space between header and footer */    /* vertically center swatch + text */
  gap: 10em; /* small space between swatch and text */
}

&:has(path:hover) {
  path:not(:hover) {
    opacity: 0.5;
  }
}
path {
  transition: 300ms;
}

/* ---------- highlight colour (change only this line) ---------- */
.selected {
  --color: oklch(60% 0.45 0) !important;  /* ← pick any tone you like */
}

/* slice itself */
.selected:is(path) {
  fill: var(--color) !important;          /*  !important overrides inline fill="" */
  stroke: #fff;
  stroke-width: 1px;
}

/* legend row + its swatch */
.selected:is(li)          { font-weight: 600; }
.selected:is(li) .swatch  { background: var(--color) !important; }

/* 1. The section title */

dl.info {
  display: grid;
  grid-template-columns: auto 1fr; /* labels in first col, values in second */
  column-gap: 0.5rem;
  row-gap: 0.25rem;
  margin: 0;            /* remove default DL margins */
  padding: 0; 
}

dl.info dt {
  font-size: 0.85rem;
  color: #555;          /* muted text */
  text-align: right;
  margin: 0;
}

/* 3. Values (dd) pop */
dl.info dd {
  font-size: 1rem;
  font-weight: 500;
  margin: 0;
}

/* 4. Tooltip positioning */
/* base styles (always applied) */
.tooltip {
  position: fixed;
  top: 0; left: 0;
  background-color: rgba(255, 255, 255, 0.9);  /* almost opaque white */
  padding: 0.5rem 0.75rem;                      /* a bit less padding */
  border-radius: 0.25rem;                       /* smaller corner radius */
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);      /* subtler lift */
  backdrop-filter: blur(2px);                   /* lighter frosted effect */
  pointer-events: none;
  z-index: 1000;

  /* hidden by default */
  opacity: 0;
  visibility: hidden;
  transform: scale(0.95);
  transition: opacity 0.15s ease, transform 0.15s ease;
}

/* when the hidden attribute is *not* present, show it */
.tooltip:not([hidden]) {
  opacity: 1;
  visibility: visible;
  transform: scale(1);
}

circle {
  transition: 200ms;
  transform-origin: center;
  transform-box: fill-box;
}

circle:hover {
  transform: scale(1.5);
}
dl.info {
  /* ... other styles ... */
  transition-duration: 500ms;
  transition-property: opacity, visibility;
}

dl.info[hidden]:not(:hover, :focus-within) {
  opacity: 0;
  visibility: hidden;
}


.brush .overlay   { fill: none;       cursor: crosshair; }
.brush .selection { fill-opacity: .25; stroke: #333; }
circle.selected {
  fill: #ff6b6b;
}